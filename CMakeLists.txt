cmake_minimum_required(VERSION 3.2)
project(cuNCC)

set(CMAKE_C_STANDARD 99)

find_package(MPI REQUIRED)
if (MPI_FOUND)
    message("")
    message("|    MPI FOUND")
    message("|    MPIEXEC = " ${MPIEXEC})
    message(${MPI_C_COMPILER})
    message(${MPI_C_INCLUDE_PATH})
    message(${MPI_C_LIBRARIES})
    message(${MPI_CXX_COMPILER})
    message(${MPI_CXX_INCLUDE_PATH})
    message(${MPI_CXX_LIBRARIES})
    message(${MPI_INCLUDE_PATH})
    message(${MPI_LIBRARY})
endif (MPI_FOUND)

find_package(CUDA REQUIRED)
if(CUDA_FOUND)
    message("")
    message("|    CUDA FOUND")
    message("|    " ${CUDA_VERSION_STRING})
    message("|    " ${CUDA_TOOLKIT_ROOT_DIR})
    message("|    " ${CUDA_INCLUDE_DIRS})
    message("|    " ${CUDA_LIBRARIES})
    set(CUDA_cupti_INCLUDE_DIRS ${CUDA_TOOLKIT_ROOT_DIR}/extras/CUPTI/include)
    message("|    " ${CUDA_cupti_INCLUDE_DIRS})
    message("|    " ${CUDA_cupti_LIBRARY})
endif(CUDA_FOUND)

include_directories(${MPI_INCLUDE_PATH} ${CUDA_INCLUDE_DIRS} ${CUDA_cupti_INCLUDE_DIRS})
link_directories(${MPI_LIBRARY} ${CUDA_LIBRARIES})

set(CUDA_NVCC_FLAGS ${CUDA_NVCC_FLAGS}; -O3 -arch=sm_52)
cuda_add_executable(cupti_transpose cupti_transpose.cu)
target_link_libraries(cupti_transpose ${MPI_LIBRARIES} ${CUDA_LIBRARIES} ${CUDA_cupti_LIBRARY} cuda)
